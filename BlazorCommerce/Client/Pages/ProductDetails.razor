@page "/product/{id:int}"
@inject IProductService ProductService

@if (product == null)
{
    <span>@message</span>
}
else
{
    <div class="media">
        <div  class="media-img-wrapper mr-2">
            <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@product.Title</h2>
            <p>@product.Description</p>
            @if(product.Variants != null && product.Variants.Count > 1)
            {
                <div class="mb-3">
                    <select class="form-control" @bind="currentTypeId">
                        @foreach (var variant in product.Variants)
                        {
                            <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                        }
                    </select>
                </div>

                
            }
            @if (GetSelectedVariant() != null)
            {
                @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                {
                    <h6 class="text-muted original-price">
                        GHS @GetSelectedVariant().OriginalPrice
                    </h6>
                }

                <h4 class="price">
                    GHS @GetSelectedVariant().Price
                </h4>

            }
            
        </div>


    </div>
}

@code {
    private ProductModel? product = null;
    private string message = string.Empty;
    private int currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product...";
        var response = await ProductService.GetSingleProductAsync(Id);

        if (response.Success)
        {
            product = response.Data;
            if (product.Variants.Count > 0)
            {
                currentTypeId = product.Variants[0].ProductTypeId;
            }
        }

        else
        {
            message = response.Message;

        }


    }

    private ProductVariantModel GetSelectedVariant()
    {
        var variante = product.Variants
        .FirstOrDefault(v => v.ProductTypeId == currentTypeId);
        return variante;
    }
}
