@inject IProductService ProductService
@implements IDisposable

<center><h2>Featured Products</h2></center>

@if (ProductService.Products == null || ProductService.Products.Count == 0)
{
    <span>@ProductService.Message</span>

}
else
{
    <div class="container">
        @foreach (var product in ProductService.Products)
       {
           @if (product.Featured)
            {
                <div class="featured-product">
                    <div>

                        <a href="product/@product.Id">
                            <img src="@product.ImageUrl">
                        </a>
                    </div>
                    <h4 href="product/@product.Id"><a>@product.Title</a></h4>
                    @if (product.Variants != null && product.Variants.Count > 0)
                    {
                        <h3 class="price">
                            $@product.Variants[0].Price
                        </h3>
                    }
                </div>
            }
       }
    </div>
}

@code {
    protected override void OnInitialized()
    {
        ProductService.ProductsListChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.ProductsListChanged -= StateHasChanged;
    }

}
